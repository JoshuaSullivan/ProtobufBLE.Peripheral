/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: unittest_swift_naming_no_prefix.proto
 *
 */

// Protos/unittest_swift_naming_no_prefix.proto - test proto
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
// -----------------------------------------------------------------------------
///
/// Test Swift reserved words used as enum or message names
///
// -----------------------------------------------------------------------------

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

// MARK: - Extension support defined in unittest_swift_naming_no_prefix.proto.

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_http) ?? 0}
    set {setExtensionValue(ext: Extensions_http, value: newValue)}
  }
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_http)
  }
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_http_request) ?? 0}
    set {setExtensionValue(ext: Extensions_http_request, value: newValue)}
  }
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_http_request)
  }
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_http_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_http_request, value: newValue)}
  }
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_http_request)
  }
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_the_http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_the_http) ?? 0}
    set {setExtensionValue(ext: Extensions_the_http, value: newValue)}
  }
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_the_http)
  }
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_the_http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_https) ?? 0}
    set {setExtensionValue(ext: Extensions_https, value: newValue)}
  }
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_https)
  }
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_https_request) ?? 0}
    set {setExtensionValue(ext: Extensions_https_request, value: newValue)}
  }
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_https_request)
  }
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_https_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_https_request, value: newValue)}
  }
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_https_request)
  }
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_the_https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_the_https) ?? 0}
    set {setExtensionValue(ext: Extensions_the_https, value: newValue)}
  }
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_the_https)
  }
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_the_https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_url) ?? 0}
    set {setExtensionValue(ext: Extensions_url, value: newValue)}
  }
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_url)
  }
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_url_value) ?? 0}
    set {setExtensionValue(ext: Extensions_url_value, value: newValue)}
  }
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_url_value)
  }
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_the_url_value) ?? 0}
    set {setExtensionValue(ext: Extensions_the_url_value, value: newValue)}
  }
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_the_url_value)
  }
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_the_url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_the_url) ?? 0}
    set {setExtensionValue(ext: Extensions_the_url, value: newValue)}
  }
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_the_url)
  }
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_the_url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var aBC: Int32 {
    get {return getExtensionValue(ext: Extensions_a_b_c) ?? 0}
    set {setExtensionValue(ext: Extensions_a_b_c, value: newValue)}
  }
  var hasABC: Bool {
    return hasExtensionValue(ext: Extensions_a_b_c)
  }
  mutating func clearABC() {
    clearExtensionValue(ext: Extensions_a_b_c)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTP) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTP, value: newValue)}
  }
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_HTTP)
  }
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTP_request) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTP_request, value: newValue)}
  }
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_HTTP_request)
  }
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTP_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTP_request, value: newValue)}
  }
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTP_request)
  }
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_the_HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTP) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTP, value: newValue)}
  }
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTP)
  }
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_the_HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTPS) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTPS, value: newValue)}
  }
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_HTTPS)
  }
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTPS_request, value: newValue)}
  }
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_HTTPS_request)
  }
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTPS_request, value: newValue)}
  }
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTPS_request)
  }
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_the_HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTPS) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTPS, value: newValue)}
  }
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTPS)
  }
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_the_HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_URL) ?? 0}
    set {setExtensionValue(ext: Extensions_URL, value: newValue)}
  }
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_URL)
  }
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_URL_value) ?? 0}
    set {setExtensionValue(ext: Extensions_URL_value, value: newValue)}
  }
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_URL_value)
  }
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_the_URL_value) ?? 0}
    set {setExtensionValue(ext: Extensions_the_URL_value, value: newValue)}
  }
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_the_URL_value)
  }
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_the_URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_the_URL) ?? 0}
    set {setExtensionValue(ext: Extensions_the_URL, value: newValue)}
  }
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_the_URL)
  }
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_the_URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_Http) ?? 0}
    set {setExtensionValue(ext: Extensions_Http, value: newValue)}
  }
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_Http)
  }
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_Http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HttpRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_HttpRequest, value: newValue)}
  }
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_HttpRequest)
  }
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_HttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttpRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttpRequest, value: newValue)}
  }
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_TheHttpRequest)
  }
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_TheHttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttp) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttp, value: newValue)}
  }
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_TheHttp)
  }
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_TheHttp)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_Https) ?? 0}
    set {setExtensionValue(ext: Extensions_Https, value: newValue)}
  }
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_Https)
  }
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_Https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HttpsRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_HttpsRequest, value: newValue)}
  }
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_HttpsRequest)
  }
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_HttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttpsRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttpsRequest, value: newValue)}
  }
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_TheHttpsRequest)
  }
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_TheHttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttps) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttps, value: newValue)}
  }
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_TheHttps)
  }
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_TheHttps)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_Url) ?? 0}
    set {setExtensionValue(ext: Extensions_Url, value: newValue)}
  }
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_Url)
  }
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_Url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_UrlValue) ?? 0}
    set {setExtensionValue(ext: Extensions_UrlValue, value: newValue)}
  }
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_UrlValue)
  }
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_UrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_TheUrlValue) ?? 0}
    set {setExtensionValue(ext: Extensions_TheUrlValue, value: newValue)}
  }
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_TheUrlValue)
  }
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_TheUrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_TheUrl) ?? 0}
    set {setExtensionValue(ext: Extensions_TheUrl, value: newValue)}
  }
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_TheUrl)
  }
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_TheUrl)
  }
}

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let UnittestSwiftNamingNoPrefix_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Extensions_http,
  Extensions_http_request,
  Extensions_the_http_request,
  Extensions_the_http,
  Extensions_https,
  Extensions_https_request,
  Extensions_the_https_request,
  Extensions_the_https,
  Extensions_url,
  Extensions_url_value,
  Extensions_the_url_value,
  Extensions_the_url,
  Extensions_a_b_c,
  Extensions_HTTP,
  Extensions_HTTP_request,
  Extensions_the_HTTP_request,
  Extensions_the_HTTP,
  Extensions_HTTPS,
  Extensions_HTTPS_request,
  Extensions_the_HTTPS_request,
  Extensions_the_HTTPS,
  Extensions_URL,
  Extensions_URL_value,
  Extensions_the_URL_value,
  Extensions_the_URL,
  Extensions_Http,
  Extensions_HttpRequest,
  Extensions_TheHttpRequest,
  Extensions_TheHttp,
  Extensions_Https,
  Extensions_HttpsRequest,
  Extensions_TheHttpsRequest,
  Extensions_TheHttps,
  Extensions_Url,
  Extensions_UrlValue,
  Extensions_TheUrlValue,
  Extensions_TheUrl
]

let Extensions_http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 101,
  fieldName: "http",
  defaultValue: 0
)

let Extensions_http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 102,
  fieldName: "http_request",
  defaultValue: 0
)

let Extensions_the_http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 103,
  fieldName: "the_http_request",
  defaultValue: 0
)

let Extensions_the_http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 104,
  fieldName: "the_http",
  defaultValue: 0
)

let Extensions_https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 111,
  fieldName: "https",
  defaultValue: 0
)

let Extensions_https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 112,
  fieldName: "https_request",
  defaultValue: 0
)

let Extensions_the_https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 113,
  fieldName: "the_https_request",
  defaultValue: 0
)

let Extensions_the_https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 114,
  fieldName: "the_https",
  defaultValue: 0
)

let Extensions_url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 121,
  fieldName: "url",
  defaultValue: 0
)

let Extensions_url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 122,
  fieldName: "url_value",
  defaultValue: 0
)

let Extensions_the_url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 123,
  fieldName: "the_url_value",
  defaultValue: 0
)

let Extensions_the_url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 124,
  fieldName: "the_url",
  defaultValue: 0
)

let Extensions_a_b_c = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 131,
  fieldName: "a_b_c",
  defaultValue: 0
)

let Extensions_HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 101,
  fieldName: "HTTP",
  defaultValue: 0
)

let Extensions_HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 102,
  fieldName: "HTTP_request",
  defaultValue: 0
)

let Extensions_the_HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 103,
  fieldName: "the_HTTP_request",
  defaultValue: 0
)

let Extensions_the_HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 104,
  fieldName: "the_HTTP",
  defaultValue: 0
)

let Extensions_HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 111,
  fieldName: "HTTPS",
  defaultValue: 0
)

let Extensions_HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 112,
  fieldName: "HTTPS_request",
  defaultValue: 0
)

let Extensions_the_HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 113,
  fieldName: "the_HTTPS_request",
  defaultValue: 0
)

let Extensions_the_HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 114,
  fieldName: "the_HTTPS",
  defaultValue: 0
)

let Extensions_URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 121,
  fieldName: "URL",
  defaultValue: 0
)

let Extensions_URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 122,
  fieldName: "URL_value",
  defaultValue: 0
)

let Extensions_the_URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 123,
  fieldName: "the_URL_value",
  defaultValue: 0
)

let Extensions_the_URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 124,
  fieldName: "the_URL",
  defaultValue: 0
)

let Extensions_Http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 101,
  fieldName: "Http",
  defaultValue: 0
)

let Extensions_HttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 102,
  fieldName: "HttpRequest",
  defaultValue: 0
)

let Extensions_TheHttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 103,
  fieldName: "TheHttpRequest",
  defaultValue: 0
)

let Extensions_TheHttp = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 104,
  fieldName: "TheHttp",
  defaultValue: 0
)

let Extensions_Https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 111,
  fieldName: "Https",
  defaultValue: 0
)

let Extensions_HttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 112,
  fieldName: "HttpsRequest",
  defaultValue: 0
)

let Extensions_TheHttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 113,
  fieldName: "TheHttpsRequest",
  defaultValue: 0
)

let Extensions_TheHttps = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 114,
  fieldName: "TheHttps",
  defaultValue: 0
)

let Extensions_Url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 121,
  fieldName: "Url",
  defaultValue: 0
)

let Extensions_UrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 122,
  fieldName: "UrlValue",
  defaultValue: 0
)

let Extensions_TheUrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 123,
  fieldName: "TheUrlValue",
  defaultValue: 0
)

let Extensions_TheUrl = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 124,
  fieldName: "TheUrl",
  defaultValue: 0
)
